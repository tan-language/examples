(use [html-from-expr] /html)
(use [serve] /network/http/server)

; #idea (Str (HTML ...))
; #todo drinks errors, investigate
(let index-handler (Func []
    (let body (html-from-expr
        '(p
            "Go to " (a {:href "/details"} "Details")
        )
    ))
    [200 {:Content-Type "text/html"} body]
))

(let details-handler (Func []
    (let body (html-from-expr '[
        (p "No details")
        (p "Go to " (a {:href "/"} "Home"))
    ]))
    [200 {:Content-Type "text/html"} body]
))

(let error-handler (Func [req]
    ; example with string.
    (let body """
    <p>Error ${(req :uri)}</p>
    """)

    [500 {:Content-Type "text/html"} body]
))

(let router (Func [req]
    (let uri (req :uri))
    (cond
        (= "/" uri) (index-handler req)
        (= "/details" uri) (details-handler req)
        else (error-handler req)
    )
))

(echo "listening at localhost:8000...")

(serve {:port 8000} router)
